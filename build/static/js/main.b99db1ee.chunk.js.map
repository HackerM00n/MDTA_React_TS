{"version":3,"sources":["app/components/PageHalf.tsx","values/index.tsx","app/components/ScopeSelect.tsx","app/components/Checkboxes.tsx","api/index.tsx","app/Lab1/components/Form.tsx","app/Lab1/components/BestOption.tsx","app/Lab1/index.tsx","app/Lab2/components/Form.tsx","app/components/DiagramLayers.tsx","app/Lab2/index.tsx","app/Lab3/components/Log.tsx","app/Lab3/components/FrameResultsSelect.tsx","app/Lab3/components/Form.tsx","app/Lab3/index.tsx","app/App.tsx","index.tsx"],"names":["PageHalf","children","xs","windowHeight","Grid","item","container","direction","alignItems","justifyContent","style","height","constants","SCOPE_NAMES","LABELS","count","scope","notFound","bestOption","productionModel","semanticWeb","frameModel","frameResults","ScopeSelect","onChange","InputLabel","id","Constants","Select","labelId","label","MenuItem","value","Checkboxes","checkboxes","state","map","description","FormControlLabel","control","Switch","checked","API_DOMAIN","getProperties","a","fetch","response","status","json","alert","console","log","getTypes","calculateBestOption","keys","_default","name","key","join","getDiagramImage","type","imageUrl","getTask3Diagram","getTask3DiagramByOption","getTask3DiagramNames","option","getTask3DiagramExactOption","getTask3DiagramLog","logOutput","Form","isLoading","minHeight","onSubmit","setIsLoading","useState","setScope","setCheckboxes","checkboxesValues","setCheckboxesValues","handleScope","event","target","_checkboxes","FormControl","component","variant","width","FormGroup","length","Button","onClick","push","BestOption","Paper","Stack","fontSize","textAlign","Lab1","setBestOption","useEffect","document","title","onCaclulate","spacing","onScopeChange","onCheck","checkAll","_checkboxesValues","forEach","_","isChecked","DiagramLayers","diagrams","scale","position","background","borderRadius","border","overflow","diagram","alt","toString","src","maxHeight","maxWidth","left","top","transform","pointerEvents","Lab2","setDiagrams","filter","types","Log","TextField","disabled","maxRows","multiline","FrameResultsSelect","results","RadioGroup","defaultValue","result","Radio","onFirstDiagramSelect","onSecondDiagramSelect","onThirdDiagramSelect","handleCheckbox","newValues","newBestOption","secondDiagram","newFrameResults","firstDiagram","handleRadio","Lab3","setFirstDiagram","setSecondDiagram","thirdDiagram","setThirdDiagram","setFrameResults","setLog","App","route","useLocation","navigate","useNavigate","window","innerHeight","setWindowHeight","updateWindowHeight","addEventListener","removeEventListener","labsProps","LinearProgress","opacity","Box","sx","Tabs","pathname","centered","Tab","path","element","theme","createTheme","palette","mode","ReactDOM","render","StrictMode","ThemeProvider","getElementById"],"mappings":"uSAoBeA,MAhBf,YAAkE,IAA9CC,EAA6C,EAA7CA,SAA6C,IAAnCC,UAAmC,MAA9B,EAA8B,EAA3BC,EAA2B,EAA3BA,aACpC,OACE,cAACC,EAAA,EAAD,CAAMC,MAAI,EAACH,GAAIA,EAAf,SACE,cAACE,EAAA,EAAD,CACEE,WAAS,EACTC,UAAU,SACVC,WAAW,SACXC,eAAe,SACfC,MAAO,CAAEC,OAAQR,EAAe,KALlC,SAOGF,O,6DCQMW,EALG,CAChBC,YAlBkB,CAClB,EAAG,8FACH,EAAG,+DACH,GAAI,2GAgBJC,OAba,CACbC,MAAO,qEACPC,MAAO,8FACPC,SAAU,gEACVC,WAAY,gHACZC,gBAAiB,0GACjBC,YAAa,+FACbC,WAAY,wFACZC,aAAc,gGCWDC,MAlBf,YAAkD,IAA3BC,EAA0B,EAA1BA,SACrB,OACE,qCACE,cAACC,EAAA,EAAD,CAAYC,GAAG,cAAf,SAA8BC,EAAUb,OAAOE,QAC/C,eAACY,EAAA,EAAD,CACEC,QAAQ,cACRH,GAAG,QACHI,MAAOH,EAAUb,OAAOE,MACxBQ,SAAUA,EAJZ,UAME,cAACO,EAAA,EAAD,CAAUC,MAAO,EAAjB,SAAqBL,EAAUd,YAAY,KAC3C,cAACkB,EAAA,EAAD,CAAUC,MAAO,EAAjB,SAAqBL,EAAUd,YAAY,KAC3C,cAACkB,EAAA,EAAD,CAAUC,MAAO,GAAjB,SAAsBL,EAAUd,YAAY,a,kBCMrCoB,MApBf,YAAmE,IAA7CC,EAA4C,EAA5CA,WAAYC,EAAgC,EAAhCA,MAAOX,EAAyB,EAAzBA,SACvC,OACE,mCACGU,EAAWE,KAAI,gBAAGV,EAAH,EAAGA,GAAIW,EAAP,EAAOA,YAAP,OACd,cAACC,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,aACEhB,SAAUA,EACVQ,MAAON,GACFS,GAAS,CAAEM,UAAWN,EAAMT,MAGrCI,MAAOO,GACFX,SCbTgB,EAAa,gCAENC,EAAa,uCAAG,WAAO3B,GAAP,eAAA4B,EAAA,+EAEFC,MAAM,GAAD,OAAIH,EAAJ,mBAAyB1B,EAAzB,mBAFH,UAID,OAFlB8B,EAFmB,QAIZC,OAJY,yCAIW,IAJX,uBAMXD,EAASE,OANE,uCAMMZ,KAAI,kBAA+B,CAChEV,GADiC,EAAGA,GAEpCW,YAFiC,EAAOA,iBANjB,yCAWzBY,MAAM,wBACNC,QAAQC,IAAR,MAZyB,kBAalB,IAbkB,0DAAH,sDAiBbC,EAAQ,uCAAG,WAAOpC,GAAP,eAAA4B,EAAA,+EAEGC,MAAM,GAAD,OAAIH,EAAJ,mBAAyB1B,EAAzB,cAFR,UAII,OAFlB8B,EAFc,QAIPC,OAJO,yCAIgB,IAJhB,uBAMND,EAASE,OANH,uCAMWZ,KAAI,kBAA+B,CAChEV,GADiC,EAAGA,GAEpCW,YAFiC,EAAOA,iBANtB,yCAWpBY,MAAM,wBACNC,QAAQC,IAAR,MAZoB,kBAab,IAba,0DAAH,sDAiBRE,EAAmB,uCAAG,WACjCrC,EACAsC,GAFiC,mBAAAV,EAAA,6DAI3BW,EAAW,CAAE7B,GAAI,EAAG8B,KAAM,IAJC,kBAORX,MAAM,GAAD,OACvBH,EADuB,mBACF1B,EADE,iCAC4BsC,EACnDlB,KAAI,SAACqB,GAAD,2BAAuBA,MAC3BC,KAAK,OAVqB,UAYP,OALlBZ,EAPyB,QAYlBC,OAZkB,yCAYKQ,GAZL,uBAcZT,EAASE,OAdG,cAczBA,EAdyB,0BAgBpB,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAO,KAAM,IAhBW,yCAkB/BC,MAAM,wBACNC,QAAQC,IAAR,MAnB+B,kBAoBxBI,GApBwB,0DAAH,wDAwBnBI,EAAkB,SAAC3C,EAAe4C,GAAhB,MAA4C,CACzEA,OACAC,SAAS,GAAD,OAAKnB,EAAL,mBAA0B1B,EAA1B,4BAAmD4C,KAGhDE,EAAkB,SAAC9C,GAAD,MAA8B,CAC3D4C,KAAM5C,EACN6C,SAAS,GAAD,OAAKnB,EAAL,mBAA0B1B,EAA1B,sBAGG+C,EAA0B,SACrC/C,EACAsC,GAFqC,MAGvB,CACdM,KAAM5C,EACN6C,SAAS,GAAD,OAAKnB,EAAL,mBAA0B1B,EAA1B,oCAA2DsC,EAChElB,KAAI,SAACqB,GAAD,2BAAuBA,MAC3BC,KAAK,QAGGM,EAAoB,uCAAG,WAClChD,EACAsC,GAFkC,eAAAV,EAAA,+EAKTC,MAAM,GAAD,OACvBH,EADuB,mBACF1B,EADE,iCAC4BsC,EACnDlB,KAAI,SAACqB,GAAD,2BAAuBA,MAC3BC,KAAK,OARsB,UAWR,OANlBZ,EAL0B,QAWnBC,OAXmB,yCAWI,IAXJ,uBAalBD,EAASE,OAbS,uCAaDZ,KAAI,gBAAGoB,EAAH,EAAGA,KAAH,MAA4B,CAC7DS,OADiC,EAASA,OAE1CT,YAf8B,yCAkBhCP,MAAM,wBACNC,QAAQC,IAAR,MAnBgC,kBAoBzB,IApByB,0DAAH,wDAwBpBe,EAA6B,SACxClD,EACAiD,GAFwC,MAG1B,CACdL,KAAM5C,EACN6C,SAAS,GAAD,OAAKnB,EAAL,mBAA0B1B,EAA1B,8CAAqEiD,KAGlEE,EAAkB,uCAAG,WAChCnD,EACAiD,GAFgC,mBAAArB,EAAA,6DAI1BW,EAAW,mFAJe,kBAOPV,MAAM,GAAD,OACvBH,EADuB,mBACF1B,EADE,sCACiCiD,IAR/B,UAUN,OAHlBnB,EAPwB,QAUjBC,OAViB,yCAUMQ,GAVN,uBAYXT,EAASE,OAZE,cAYxBA,EAZwB,OAc9BE,QAAQC,IAAIH,GAdkB,mBAgBnB,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMoB,YAAab,GAhBI,yCAkB9BN,MAAM,wBACNC,QAAQC,IAAR,MAnB8B,kBAoBvBI,GApBuB,0DAAH,wDCpChBc,MApEf,YAKY,IAJVC,EAIS,EAJTA,UACAC,EAGS,EAHTA,UACAC,EAES,EAFTA,SACAC,EACS,EADTA,aAEA,EAA0BC,qBAA1B,mBAAO1D,EAAP,KAAc2D,EAAd,KACA,EAAoCD,mBAAsB,IAA1D,mBAAOxC,EAAP,KAAmB0C,EAAnB,KACA,EAAgDF,mBAAc,IAA9D,mBAAOG,EAAP,KAAyBC,EAAzB,KAQMC,EAAW,uCAAG,WAAOC,GAAP,iBAAApC,EAAA,6DACVZ,EAAUgD,EAAMC,OAAhBjD,MAERyC,GAAa,GAHK,SAKQ9B,EAAcX,GALtB,OAKZkD,EALY,OAOlBJ,EAAoB,IACpBH,EAAS3C,GACT4C,EAAcM,GACdT,GAAa,GAVK,2CAAH,sDAuBjB,OACE,mCACE,cAACU,EAAA,EAAD,CACEC,UAAU,WACVC,QAAQ,WACR3E,MAAK,aACH4E,MAAO,OACHf,GAAa,CAAEA,cALvB,SAQE,eAACgB,EAAA,EAAD,WACE,cAAC9D,EAAA,EAAD,CAAYC,GAAG,cAAf,SAA8BC,EAAUb,OAAOE,QAC/C,cAAC,EAAD,CAAaQ,SAAUuD,IACvB,cAAC,EAAD,CACE7C,WAAYA,EACZC,MAAO0C,EACPrD,SA7Ca,SAACwD,GAAD,OACrBF,EAAoB,2BACfD,GADc,kBAEhBG,EAAMC,OAAOjD,MAAQgD,EAAMC,OAAOxC,gBA4C5BP,EAAWsD,SAAWlB,GACvB,cAACmB,EAAA,EAAD,CAAQC,QA7BE,WAClB,IAAMpC,EAAO,GAEb,IAAK,IAAIG,KAAOoB,EACVA,EAAiBpB,IAAMH,EAAKqC,KAAKlC,GAGnCH,EAAKkC,QAAUxE,GAASwD,GAAUA,EAASxD,EAAOsC,IAsBhB+B,QAAQ,YAAtC,SACG1D,EAAUb,OAAOC,gB,kBC9CjB6E,EApBI,SAAC,GAA4C,IAA1C1E,EAAyC,EAAzCA,WAAYqD,EAA6B,EAA7BA,UAChC,OACE,eAACsB,EAAA,EAAD,CACET,UAAWU,IACXT,QAAQ,WACR9E,UAAU,SACVE,eAAe,SACfC,MAAK,aACHqF,SAAU,GACVT,MAAO,MACPU,UAAW,UACPzB,GAAa,CAAEA,cATvB,UAYE,8BAAMrD,EAAaS,EAAUb,OAAOI,WAAa,IAAM,WACvD,8BAAMA,QC8BG+E,MAzCf,YAAgE,IAAhD3B,EAA+C,EAA/CA,UAAWG,EAAoC,EAApCA,aAActE,EAAsB,EAAtBA,aACvC,EAAoCuE,mBAAiB,IAArD,mBAAOxD,EAAP,KAAmBgF,EAAnB,KAEAC,qBAAU,WACRC,SAASC,MAAQ1E,EAAUb,OAAOK,kBACjC,IAEH,IAAMmF,EAAW,uCAAG,WAAO1C,EAAcN,GAArB,eAAAV,EAAA,6DAClB6B,GAAa,GADK,SAGOpB,EAAoBO,EAAMN,GAHjC,OAGZpC,EAHY,OAKlBgF,GAAwB,OAAVhF,QAAU,IAAVA,OAAA,EAAAA,EAAYsC,OAAQ7B,EAAUb,OAAOG,UAEnDwD,GAAa,GAPK,2CAAH,wDAcjB,OACE,mCACE,eAACrE,EAAA,EAAD,CAAME,WAAS,EAACiG,QAAS,EAAzB,UACE,cAAC,EAAD,CAAUpG,aAAcA,EAAxB,SACE,cAAC,EAAD,CACEqE,SAAU8B,EACVE,cAVW,kBAAMN,EAAc,KAW/B5B,UAAWA,EACXG,aAAcA,EACdF,UAXQ,UAcZ,cAAC,EAAD,CAAUpE,aAAcA,EAAxB,SACE,cAAC,EAAD,CAAYe,WAAYA,EAAYqD,UAf1B,gB,QCuDLF,MAxEf,YAA4E,IAA5DE,EAA2D,EAA3DA,UAAWE,EAAgD,EAAhDA,aAAc+B,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,QACtD,EAA0B/B,qBAA1B,mBAAO1D,EAAP,KAAc2D,EAAd,KACA,EAAoCD,mBAAsB,IAA1D,mBAAOxC,EAAP,KAAmB0C,EAAnB,KACA,EAAgDF,mBAAc,IAA9D,mBAAOG,EAAP,KAAyBC,EAAzB,KAgBM4B,EAAW,SAAC1F,EAAekB,GAC/B,IAAMyE,EAAyB,GAE/BzE,EAAW0E,SAAQ,SAAChD,GAClB+C,EAAkB/C,EAAKlC,KAAM,KAG/BoD,EAAoB6B,IAGhB5B,EAAW,uCAAG,WAAOC,GAAP,iBAAApC,EAAA,6DACVZ,EAAUgD,EAAMC,OAAhBjD,MAERyC,GAAa,GAHK,SAKQrB,EAASpB,GALjB,OAKZkD,EALY,OAOlBwB,EAAS1E,EAAOkD,GAChBN,EAAcM,GACdP,EAAS3C,GACTyC,GAAa,GAET+B,GACFA,EACExE,EACAkD,EAAY9C,KAAI,SAACyE,GAAD,OAAOA,EAAEnF,OAfX,4CAAH,sDAmBjB,OACE,mCACE,cAACyD,EAAA,EAAD,CACEC,UAAU,WACVC,QAAQ,WACR3E,MAAK,aACH4E,MAAO,OACHf,GAAa,CAAEA,cALvB,SAQE,eAACgB,EAAA,EAAD,WACE,cAAC9D,EAAA,EAAD,CAAYC,GAAG,cAAf,SAA8BC,EAAUb,OAAOE,QAC/C,cAAC,EAAD,CAAaQ,SAAUuD,IACvB,cAAC,EAAD,CACE7C,WAAYA,EACZC,MAAO0C,EACPrD,SA3Da,SAACwD,GACtBF,EAAoB,2BACfD,GADc,kBAEhBG,EAAMC,OAAOjD,MAAQgD,EAAMC,OAAOxC,WAGjCgE,GACFA,EAAQ,CACNzF,QACA4C,MAAOoB,EAAMC,OAAOjD,MACpB8E,UAAW9B,EAAMC,OAAOxC,qBCQjBsE,MAjCf,YAAgF,IAAvDC,EAAsD,EAAtDA,SAAsD,IAA5CC,aAA4C,MAApC,IAAoC,MAA/BtG,cAA+B,MAAtB,GAAsB,EAC7E,OACE,qBACED,MAAO,CACLwG,SAAU,WACV5B,MAAO,MACP3E,OAAQA,EAAS,IACjBwG,WAAY,QACZC,aAAc,OACdC,OAAQ,oBACRC,SAAU,UARd,SAWGN,EAAS5E,KAAI,SAACmF,GAAD,OACZ,qBACEC,IAAKD,EAAQ3D,KAAK6D,WAElBC,IAAKH,EAAQ1D,SACbnD,MAAO,CACLwG,SAAU,WACVS,UAAWV,EAAQ,IACnBW,SAAUX,EAAQ,IAClBY,KAAM,MACNC,IAAK,MACLC,UAAW,wBACXC,cAAe,SATZT,EAAQ3D,YCwCRqE,MA/Cf,YAAgE,IAAhD3D,EAA+C,EAA/CA,UAAWG,EAAoC,EAApCA,aAActE,EAAsB,EAAtBA,aACvC,EAAgCuE,mBAAqB,IAArD,mBAAOsC,EAAP,KAAiBkB,EAAjB,KA4BA,OA1BA/B,qBAAU,WACRC,SAASC,MAAQ1E,EAAUb,OAAOM,cACjC,IAyBD,eAAChB,EAAA,EAAD,CAAME,WAAS,EAACiG,QAAS,EAAzB,UACE,cAAC,EAAD,CAAUpG,aAAcA,EAAcD,GAAI,EAA1C,SACE,cAAC,EAAD,CACEqE,UA1BU,MA2BVD,UAAWA,EACXG,aAAcA,EACdgC,QAvBQ,SAAC,GAQV,IAPLzF,EAOI,EAPJA,MACA4C,EAMI,EANJA,KACAkD,EAKI,EALJA,UAMAoB,EACEpB,EAAS,CACJnD,EAAgB3C,EAAO4C,IADnB,mBAC6BoD,IAClCA,EAASmB,QAAO,SAACZ,GAAD,OAAaA,EAAQ3D,OAASA,OAY9C4C,cA5Bc,SAACxF,EAAeoH,GACpCF,EAAYE,EAAMhG,KAAI,SAACwB,GAAD,OAAUD,EAAgB3C,EAAO4C,YA8BrD,cAAC,EAAD,CAAUzD,aAAcA,EAAcD,GAAI,EAA1C,SACE,cAAC,EAAD,CAAe8G,SAAUA,EAAUC,MAAO,Y,UCjCnCoB,OAhBf,YAA+B,IAAhBrG,EAAe,EAAfA,MACb,OACE,cAACsG,GAAA,EAAD,CACEC,UAAQ,EACR7G,GAAG,oBACHI,MAAM,MACNE,MAAOA,EACPwG,QAAS,GACTC,WAAS,EACT/H,MAAO,CACL4E,MAAO,U,oBCYAoD,OAtBf,YAAyE,IAA3CC,EAA0C,EAA1CA,QAASnH,EAAiC,EAAjCA,SACrC,OACE,mCACE,cAACoH,GAAA,EAAD,CACE,aAAW,SACXC,aAAa,SACbrF,KAAK,sBACLhC,SAAUA,EAJZ,SAMGmH,EAAQvG,KAAI,SAAC0G,GAAD,OACX,cAACxG,EAAA,EAAD,CAEEN,MAAO8G,EAAO7E,OACd1B,QAAS,cAACwG,GAAA,EAAD,IACTjH,MAAOgH,EAAOtF,MAHTsF,EAAO7E,gBC2GTI,OAnGf,YAQY,IAPVE,EAOS,EAPTA,UACAjD,EAMS,EANTA,aACA6B,EAKS,EALTA,IACA6F,EAIS,EAJTA,qBACAC,EAGS,EAHTA,sBACAC,EAES,EAFTA,qBACAzE,EACS,EADTA,aAEA,EAA0BC,qBAA1B,mBAAO1D,EAAP,KAAc2D,EAAd,KACA,EAAoCD,mBAAsB,IAA1D,mBAAOxC,EAAP,KAAmB0C,EAAnB,KACA,EAAgDF,mBAAc,IAA9D,mBAAOG,EAAP,KAAyBC,EAAzB,KAEMqE,EAAc,uCAAG,WAAOnE,GAAP,yBAAApC,EAAA,sDAUrB,IAASa,KATH2F,EADe,2BAEhBvE,GAFgB,kBAGlBG,EAAMC,OAAOjD,MAAQgD,EAAMC,OAAOxC,UAGrCqC,EAAoBsE,GAEd9F,EAAO,GAEG8F,EACVA,EAAU3F,IAAMH,EAAKqC,MAAMlC,GAXZ,GAchBzC,EAdgB,wDAgBrByD,GAAa,GAhBQ,SAiBOpB,EAAoBrC,EAAOsC,GAjBlC,UAiBf+F,EAjBe,cAmBRA,QAnBQ,IAmBRA,OAnBQ,EAmBRA,EAAe3H,GAnBP,0CAoBHuH,EAAsB,KAAM,KApBzB,eAsBfK,EAAgBvF,EAAwB/C,EAAOsC,GAtBhC,UAuBSU,EAAqBhD,EAAOsC,GAvBrC,QAuBfiG,EAvBe,OAyBrBN,EAAsBK,EAAeC,GAErC9E,GAAa,GA3BQ,4CAAH,sDA8BdM,EAAW,uCAAG,WAAOC,GAAP,mBAAApC,EAAA,6DACVZ,EAAUgD,EAAMC,OAAhBjD,MAERyC,GAAa,GAEP+E,EAAe1F,EAAgB9B,GACrCgH,EAAqBQ,GANH,SAQQ7G,EAAcX,GARtB,OAQZkD,EARY,OAUlBJ,EAAoB,IACpBH,EAAS3C,GACT4C,EAAcM,GACdT,GAAa,GAbK,4CAAH,sDAgBXgF,EAAW,uCAAG,WAAOzE,GAAP,iBAAApC,EAAA,yDACVZ,EAAUgD,EAAMC,OAAhBjD,MAEHhB,EAHa,wDAKlByD,GAAa,GALK,SAMAN,EAAmBnD,EAAOgB,GAN1B,OAMZmB,EANY,OAOlBsB,GAAa,GAEbyE,EAAqBhF,EAA2BlD,EAAOgB,GAAQmB,GAT7C,2CAAH,sDAYjB,OACE,mCACE,cAACgC,EAAA,EAAD,CACEC,UAAU,WACVC,QAAQ,WACR3E,MAAK,aACH4E,MAAO,OACHf,GAAa,CAAEA,cALvB,SAQE,eAACgB,EAAA,EAAD,WACE,cAAC9D,EAAA,EAAD,CAAYC,GAAG,cAAf,SAA8BC,EAAUb,OAAOE,QAC/C,cAAC,EAAD,CAAaQ,SAAUuD,IACvB,cAAC,EAAD,CACE7C,WAAYA,EACZC,MAAO0C,EACPrD,SAAU2H,IAEX7H,EAAakE,OAAS,GACrB,cAAC,GAAD,CAAoBmD,QAASrH,EAAcE,SAAUiI,IAEtDtG,EAAIqC,OAAS,GAAK,cAAC,GAAD,CAAKxD,MAAOmB,YC3C1BuG,OA3Df,YAAgE,IAAhDpF,EAA+C,EAA/CA,UAAWG,EAAoC,EAApCA,aAActE,EAAsB,EAAtBA,aACvC,EAAwCuE,qBAAxC,mBAAO8E,EAAP,KAAqBG,EAArB,KACA,EAA0CjF,qBAA1C,mBAAO4E,EAAP,KAAsBM,EAAtB,KACA,EAAwClF,qBAAxC,mBAAOmF,EAAP,KAAqBC,EAArB,KAEA,EAAwCpF,mBAAyB,IAAjE,mBAAOpD,EAAP,KAAqByI,EAArB,KAEA,EAAsBrF,mBAAiB,IAAvC,mBAAOvB,EAAP,KAAY6G,EAAZ,KAEMzC,EAAUsC,GAAgBP,GAAiBE,EAC3CxC,EAAWO,EAAU,CAACA,GAAW,GA4BvC,OA1BApB,qBAAU,WACRC,SAASC,MAAQ1E,EAAUb,OAAOO,aACjC,IAyBD,eAACjB,EAAA,EAAD,CAAME,WAAS,EAACiG,QAAS,EAAzB,UACE,cAAC,EAAD,CAAUpG,aAAcA,EAAcD,GAAI,EAA1C,SACE,cAAC,GAAD,CACEiD,IAAKA,EACLoB,UA3BU,MA4BVD,UAAWA,EACXG,aAAcA,EACduE,qBA5BqB,SAACzB,GAC5ByC,EAAO,IACPF,EAAgB,MAChBF,EAAiB,MACjBD,EAAgBpC,GAChBwC,EAAgB,KAwBVd,sBArBsB,SAAC1B,EAA0BjG,GACvD0I,EAAO,IACPF,EAAgB,MAChBF,EAAiBrC,GACjBwC,EAAgBzI,IAkBV4H,qBAfqB,SAAC3B,EAA0BpE,GACtD2G,EAAgBvC,GAChByC,EAAO7G,IAcD7B,aAAcA,MAGlB,cAAC,EAAD,CAAUnB,aAAcA,EAAcD,GAAI,EAA1C,SACE,cAAC,EAAD,CAAe8G,SAAUA,EAAUrG,OAAQ,WCPpCsJ,OA9Cf,WACE,IAAMC,EAAQC,cACRC,EAAWC,cACjB,EAAkC3F,oBAAkB,GAApD,mBAAOJ,EAAP,KAAkBG,EAAlB,KACA,EAAwCC,mBAAiB4F,OAAOC,aAAhE,mBAAOpK,EAAP,KAAqBqK,EAArB,KAEArE,qBAAU,WACR,IAAMsE,EAAqB,WACzBD,EAAgBF,OAAOC,cAIzB,OADAD,OAAOI,iBAAiB,SAAUD,GAC3B,kBAAMH,OAAOK,oBAAoB,SAAUF,MACjD,IAEH,IAEMG,EAAY,CAChBtG,YACAG,eACAtE,gBAGF,OACE,qCACE,cAAC0K,EAAA,EAAD,CACEnK,MAAO,CACLoK,QAASxG,EAAY,IAAM,KAG/B,cAACyG,EAAA,EAAD,CAAKC,GAAI,CAAE1F,MAAO,QAAlB,SACE,eAAC2F,EAAA,EAAD,CAAMjJ,MAAOkI,EAAMgB,SAAU1J,SAhBjB,SAACqF,EAAQ7E,GAAT,OAA2BoI,EAASpI,IAgBEmJ,UAAQ,EAA1D,UACE,cAACC,EAAA,EAAD,CAAKtJ,MAAOH,EAAUb,OAAOK,gBAAiBa,MAAM,MACpD,cAACoJ,EAAA,EAAD,CAAKtJ,MAAOH,EAAUb,OAAOM,YAAaY,MAAM,OAChD,cAACoJ,EAAA,EAAD,CAAKtJ,MAAOH,EAAUb,OAAOO,WAAYW,MAAM,YAGnD,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqJ,KAAM,IAAKC,QAAS,cAAC,EAAD,eAAUV,MACrC,cAAC,IAAD,CAAOS,KAAK,KAAKC,QAAS,cAAC,EAAD,eAAUV,MACpC,cAAC,IAAD,CAAOS,KAAK,KAAKC,QAAS,cAAC,GAAD,eAAUV,aC5CtCW,I,OAAQC,YAAY,CACxBC,QAAS,CACPC,KAAM,WAIVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAACC,EAAA,EAAD,CAAeP,MAAOA,GAAtB,SACE,cAAC,GAAD,UAINnF,SAAS2F,eAAe,W","file":"static/js/main.b99db1ee.chunk.js","sourcesContent":["import Grid from \"@mui/material/Grid\";\n\nimport IPageHalf from \"types/IPageHalf\";\n\nfunction PageHalf({ children, xs = 6, windowHeight }: IPageHalf) {\n  return (\n    <Grid item xs={xs}>\n      <Grid\n        container\n        direction=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        style={{ height: windowHeight - 100 }}\n      >\n        {children}\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default PageHalf;\n","const SCOPE_NAMES = {\n  8: \"Військова справа\",\n  9: \"Автосервіс\",\n  20: \"Морський транспорт\",\n};\n\nconst LABELS = {\n  count: \"Розрахувати\",\n  scope: \"Предметна галузь\",\n  notFound: \"Не знайдено\",\n  bestOption: \"Оптимальний варіант\",\n  productionModel: \"Продукційна модель\",\n  semanticWeb: \"Cемантична мережа\",\n  frameModel: \"Фреймова модель\",\n  frameResults: \"Фрейм-результати\"\n};\n\nconst constants = {\n  SCOPE_NAMES,\n  LABELS,\n};\n\nexport default constants;\n","import MenuItem from \"@mui/material/MenuItem\";\nimport Select from \"@mui/material/Select\";\nimport InputLabel from \"@mui/material/InputLabel\";\n\nimport IScopeSelect from \"types/IScopeSelect\";\nimport Constants from \"values\";\n\nfunction ScopeSelect({ onChange }: IScopeSelect) {\n  return (\n    <>\n      <InputLabel id=\"scope-label\">{Constants.LABELS.scope}</InputLabel>\n      <Select\n        labelId=\"scope-label\"\n        id=\"scope\"\n        label={Constants.LABELS.scope}\n        onChange={onChange}\n      >\n        <MenuItem value={9}>{Constants.SCOPE_NAMES[9]}</MenuItem>\n        <MenuItem value={8}>{Constants.SCOPE_NAMES[8]}</MenuItem>\n        <MenuItem value={20}>{Constants.SCOPE_NAMES[20]}</MenuItem>\n      </Select>\n    </>\n  );\n}\n\nexport default ScopeSelect;\n","import FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\n\nimport ICheckboxes from \"types/ICheckboxes\";\n\nfunction Checkboxes({ checkboxes, state, onChange }: ICheckboxes) {\n  return (\n    <>\n      {checkboxes.map(({ id, description }) => (\n        <FormControlLabel\n          control={\n            <Switch\n              onChange={onChange}\n              value={id}\n              {...(state && { checked: !!state[id] })}\n            />\n          }\n          label={description}\n          key={id}\n        />\n      ))}\n    </>\n  );\n}\n\nexport default Checkboxes;\n","import IDiagram from \"types/IDiagram\";\nimport ICheckbox from \"types/ICheckbox\";\nimport IApiBestoption from \"types/IApiBestOption\";\nimport IFrameResult from \"types/IFrameResult\";\n\nconst API_DOMAIN = \"https://localhost:5001/api/v1\";\n\nexport const getProperties = async (scope: number): Promise<ICheckbox[]> => {\n  try {\n    const response = await fetch(`${API_DOMAIN}/variant${scope}/getProperties`);\n\n    if (response.status !== 200) return [];\n\n    return (await response.json()).map(({ id, description }: any) => ({\n      id,\n      description,\n    }));\n  } catch (error) {\n    alert(\"API is not available\");\n    console.log(error);\n    return [];\n  }\n};\n\nexport const getTypes = async (scope: number): Promise<ICheckbox[]> => {\n  try {\n    const response = await fetch(`${API_DOMAIN}/variant${scope}/getTypes`);\n\n    if (response.status !== 200) return [];\n\n    return (await response.json()).map(({ id, description }: any) => ({\n      id,\n      description,\n    }));\n  } catch (error) {\n    alert(\"API is not available\");\n    console.log(error);\n    return [];\n  }\n};\n\nexport const calculateBestOption = async (\n  scope: number,\n  keys: number[]\n): Promise<IApiBestoption> => {\n  const _default = { id: 0, name: \"\" };\n\n  try {\n    const response = await fetch(\n      `${API_DOMAIN}/variant${scope}/calculateBestOptions?${keys\n        .map((key) => `properties=${key}`)\n        .join(\"&\")}`\n    );\n    if (response.status !== 200) return _default;\n\n    const json = await response.json();\n\n    return json?.[0] || {};\n  } catch (error) {\n    alert(\"API is not available\");\n    console.log(error);\n    return _default;\n  }\n};\n\nexport const getDiagramImage = (scope: number, type: number): IDiagram => ({\n  type,\n  imageUrl: `${API_DOMAIN}/variant${scope}/getDiagram?type=${type}`,\n});\n\nexport const getTask3Diagram = (scope: number): IDiagram => ({\n  type: scope,\n  imageUrl: `${API_DOMAIN}/variant${scope}/getTask3Diagram`,\n});\n\nexport const getTask3DiagramByOption = (\n  scope: number,\n  keys: number[]\n): IDiagram => ({\n  type: scope,\n  imageUrl: `${API_DOMAIN}/variant${scope}/getTask3DiagramByOption?${keys\n    .map((key) => `properties=${key}`)\n    .join(\"&\")}`,\n});\n\nexport const getTask3DiagramNames = async (\n  scope: number,\n  keys: number[]\n): Promise<IFrameResult[]> => {\n  try {\n    const response = await fetch(\n      `${API_DOMAIN}/variant${scope}/getTask3DiagramNames?${keys\n        .map((key) => `properties=${key}`)\n        .join(\"&\")}`\n    );\n\n    if (response.status !== 200) return [];\n\n    return (await response.json()).map(({ name, option }: any) => ({\n      option,\n      name,\n    }));\n  } catch (error) {\n    alert(\"API is not available\");\n    console.log(error);\n    return [];\n  }\n};\n\nexport const getTask3DiagramExactOption = (\n  scope: number,\n  option: number\n): IDiagram => ({\n  type: scope,\n  imageUrl: `${API_DOMAIN}/variant${scope}/getTask3DiagramExactOption?option=${option}`,\n});\n\nexport const getTask3DiagramLog = async (\n  scope: number,\n  option: number\n): Promise<string> => {\n  const _default = \"Лог не знайдено\";\n\n  try {\n    const response = await fetch(\n      `${API_DOMAIN}/variant${scope}/getTask3DiagramLog?option=${option}`\n    );\n    if (response.status !== 200) return _default;\n\n    const json = await response.json();\n\n    console.log(json);\n\n    return json?.logOutput || _default\n  } catch (error) {\n    alert(\"API is not available\");\n    console.log(error);\n    return _default;\n  }\n};","import { useState } from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Button from \"@mui/material/Button\";\n\nimport ScopeSelect from \"app/components/ScopeSelect\";\nimport Checkboxes from \"app/components/Checkboxes\";\nimport ICheckbox from \"types/ICheckbox\";\nimport IForm1 from \"types/IForm1\";\nimport Constants from \"values\";\nimport { getProperties } from \"api\";\n\nfunction Form({\n  isLoading,\n  minHeight,\n  onSubmit,\n  setIsLoading,\n}: IForm1) {\n  const [scope, setScope] = useState<number>();\n  const [checkboxes, setCheckboxes] = useState<ICheckbox[]>([]);\n  const [checkboxesValues, setCheckboxesValues] = useState<any>({});\n\n  const handleCheckbox = (event: any) =>\n    setCheckboxesValues({\n      ...checkboxesValues,\n      [event.target.value]: event.target.checked,\n    });\n\n  const handleScope = async (event: any) => {\n    const { value } = event.target;\n\n    setIsLoading(true);\n\n    const _checkboxes = await getProperties(value);\n\n    setCheckboxesValues({});\n    setScope(value);\n    setCheckboxes(_checkboxes);\n    setIsLoading(false);\n  };\n\n  const onCaclucate = () => {\n    const keys = [];\n\n    for (let key in checkboxesValues) {\n      if (checkboxesValues[key]) keys.push(key);\n    }\n\n    if (keys.length && scope && onSubmit) onSubmit(scope, keys);\n  };\n\n  return (\n    <>\n      <FormControl\n        component=\"fieldset\"\n        variant=\"standard\"\n        style={{\n          width: \"80%\",\n          ...(minHeight && { minHeight }),\n        }}\n      >\n        <FormGroup>\n          <InputLabel id=\"scope-label\">{Constants.LABELS.scope}</InputLabel>\n          <ScopeSelect onChange={handleScope} />\n          <Checkboxes\n            checkboxes={checkboxes}\n            state={checkboxesValues}\n            onChange={handleCheckbox}\n          />\n          {!!checkboxes.length && !isLoading && (\n            <Button onClick={onCaclucate} variant=\"contained\">\n              {Constants.LABELS.count}\n            </Button>\n          )}\n        </FormGroup>\n      </FormControl>\n    </>\n  );\n}\n\nexport default Form;\n","import Paper from \"@mui/material/Paper\";\nimport Stack from \"@mui/material/Stack\";\n\nimport IBestOption from \"types/IBestOption\";\nimport Constants from \"values\";\n\nconst BestOption = ({ bestOption, minHeight }: IBestOption) => {\n  return (\n    <Paper\n      component={Stack}\n      variant=\"outlined\"\n      direction=\"column\"\n      justifyContent=\"center\"\n      style={{\n        fontSize: 30,\n        width: \"80%\",\n        textAlign: \"center\",\n        ...(minHeight && { minHeight }),\n      }}\n    >\n      <div>{bestOption ? Constants.LABELS.bestOption + \":\" : \"⬅\"}</div>\n      <div>{bestOption}</div>\n    </Paper>\n  );\n};\n\nexport default BestOption;\n","import { useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\n\nimport PageHalf from \"../components/PageHalf\";\nimport Form from \"./components/Form\";\nimport BestOption from \"./components/BestOption\";\nimport ILab from \"types/ILab\";\nimport Constants from \"values\";\nimport { calculateBestOption } from \"api\";\n\nfunction Lab1({ isLoading, setIsLoading, windowHeight }: ILab) {\n  const [bestOption, setBestOption] = useState<string>(\"\");\n\n  useEffect(() => {\n    document.title = Constants.LABELS.productionModel;\n  }, []);\n\n  const onCaclulate = async (type: number, keys: number[]) => {\n    setIsLoading(true);\n\n    const bestOption = await calculateBestOption(type, keys);\n\n    setBestOption(bestOption?.name || Constants.LABELS.notFound);\n\n    setIsLoading(false);\n  };\n\n  const onFormSwitch = () => setBestOption(\"\");\n\n  const minHeight = \"50%\";\n\n  return (\n    <>\n      <Grid container spacing={2}>\n        <PageHalf windowHeight={windowHeight}>\n          <Form\n            onSubmit={onCaclulate}\n            onScopeChange={onFormSwitch}\n            isLoading={isLoading}\n            setIsLoading={setIsLoading}\n            minHeight={minHeight}\n          />\n        </PageHalf>\n        <PageHalf windowHeight={windowHeight}>\n          <BestOption bestOption={bestOption} minHeight={minHeight} />\n        </PageHalf>\n      </Grid>\n    </>\n  );\n}\n\nexport default Lab1;\n","import { useState } from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport InputLabel from \"@mui/material/InputLabel\";\n\nimport ScopeSelect from \"app/components/ScopeSelect\";\nimport Checkboxes from \"app/components/Checkboxes\";\nimport ICheckbox from \"types/ICheckbox\";\nimport IForm2 from \"types/IForm2\";\nimport Constants from \"values\";\nimport { getTypes } from \"api\";\n\nfunction Form({ minHeight, setIsLoading, onScopeChange, onCheck }: IForm2) {\n  const [scope, setScope] = useState<number>();\n  const [checkboxes, setCheckboxes] = useState<ICheckbox[]>([]);\n  const [checkboxesValues, setCheckboxesValues] = useState<any>({});\n\n  const handleCheckbox = (event: any) => {\n    setCheckboxesValues({\n      ...checkboxesValues,\n      [event.target.value]: event.target.checked,\n    });\n\n    if (onCheck)\n      onCheck({\n        scope,\n        type: +event.target.value,\n        isChecked: event.target.checked,\n      });\n  };\n\n  const checkAll = (scope: number, checkboxes: ICheckbox[]) => {\n    const _checkboxesValues: any = {};\n\n    checkboxes.forEach((type) => {\n      _checkboxesValues[type.id] = true;\n    });\n\n    setCheckboxesValues(_checkboxesValues);\n  };\n\n  const handleScope = async (event: any) => {\n    const { value } = event.target;\n\n    setIsLoading(true);\n\n    const _checkboxes = await getTypes(value);\n\n    checkAll(value, _checkboxes);\n    setCheckboxes(_checkboxes);\n    setScope(value);\n    setIsLoading(false);\n\n    if (onScopeChange)\n      onScopeChange(\n        value,\n        _checkboxes.map((_) => _.id)\n      );\n  };\n\n  return (\n    <>\n      <FormControl\n        component=\"fieldset\"\n        variant=\"standard\"\n        style={{\n          width: \"80%\",\n          ...(minHeight && { minHeight }),\n        }}\n      >\n        <FormGroup>\n          <InputLabel id=\"scope-label\">{Constants.LABELS.scope}</InputLabel>\n          <ScopeSelect onChange={handleScope} />\n          <Checkboxes\n            checkboxes={checkboxes}\n            state={checkboxesValues}\n            onChange={handleCheckbox}\n          />\n        </FormGroup>\n      </FormControl>\n    </>\n  );\n}\n\nexport default Form;\n","import IDiagramLayers from \"types/IDiagramLayers\";\n\nfunction DiagramLayers({ diagrams, scale = 100, height = 70 }: IDiagramLayers) {\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        width: \"90%\",\n        height: height + \"%\",\n        background: \"white\",\n        borderRadius: \"50px\",\n        border: \"solid #bababa 2px\",\n        overflow: \"hidden\",\n      }}\n    >\n      {diagrams.map((diagram) => (\n        <img\n          alt={diagram.type.toString()}\n          key={diagram.type}\n          src={diagram.imageUrl}\n          style={{\n            position: \"absolute\",\n            maxHeight: scale + \"%\",\n            maxWidth: scale + \"%\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            pointerEvents: \"none\"\n          }}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default DiagramLayers;\n","import { useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\n\nimport PageHalf from \"app/components/PageHalf\";\nimport Form from \"./components/Form\";\nimport DiagramLayers from \"app/components/DiagramLayers\";\nimport IDiagram from \"types/IDiagram\";\nimport ILab from \"types/ILab\";\nimport Constants from \"values\";\nimport { getDiagramImage } from \"api\";\n\nfunction Lab2({ isLoading, setIsLoading, windowHeight }: ILab) {\n  const [diagrams, setDiagrams] = useState<IDiagram[]>([]);\n\n  useEffect(() => {\n    document.title = Constants.LABELS.semanticWeb;\n  }, []);\n\n  const minHeight = \"50%\";\n\n  const onScopeChange = (scope: number, types: number[]) => {\n    setDiagrams(types.map((type) => getDiagramImage(scope, type)));\n  };\n\n  const onCheck = ({\n    scope,\n    type,\n    isChecked,\n  }: {\n    scope: number;\n    type: number;\n    isChecked: boolean;\n  }) => {\n    setDiagrams(\n      isChecked\n        ? [getDiagramImage(scope, type), ...diagrams]\n        : diagrams.filter((diagram) => diagram.type !== type)\n    );\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <PageHalf windowHeight={windowHeight} xs={4}>\n        <Form\n          minHeight={minHeight}\n          isLoading={isLoading}\n          setIsLoading={setIsLoading}\n          onCheck={onCheck}\n          onScopeChange={onScopeChange}\n        />\n      </PageHalf>\n      <PageHalf windowHeight={windowHeight} xs={8}>\n        <DiagramLayers diagrams={diagrams} scale={115}/>\n      </PageHalf>\n    </Grid>\n  );\n}\n\nexport default Lab2;\n","import { TextField } from \"@mui/material\";\nimport ILog from \"types/ILog\";\n\nfunction Log({ value }: ILog) {\n  return (\n    <TextField\n      disabled\n      id=\"outlined-disabled\"\n      label=\"Log\"\n      value={value}\n      maxRows={10}\n      multiline\n      style={{\n        width: \"80%\"\n      }}\n    />\n  );\n}\n\nexport default Log;\n","import IFrameResultsSelect from \"types/IFrameResultsSelect\";\nimport { FormControlLabel, Radio, RadioGroup } from \"@mui/material\";\n\nfunction FrameResultsSelect({ results, onChange }: IFrameResultsSelect) {\n  return (\n    <>\n      <RadioGroup\n        aria-label=\"gender\"\n        defaultValue=\"female\"\n        name=\"radio-buttons-group\"\n        onChange={onChange}\n      >\n        {results.map((result) => (\n          <FormControlLabel\n            key={result.option}\n            value={result.option}\n            control={<Radio />}\n            label={result.name}\n          />\n        ))}\n      </RadioGroup>\n    </>\n  );\n}\n\nexport default FrameResultsSelect;\n","import { useState } from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport InputLabel from \"@mui/material/InputLabel\";\n\nimport Log from \"./Log\";\nimport FrameResultsSelect from \"./FrameResultsSelect\";\nimport ScopeSelect from \"app/components/ScopeSelect\";\nimport Checkboxes from \"app/components/Checkboxes\";\nimport ICheckbox from \"types/ICheckbox\";\nimport IForm3 from \"types/IForm3\";\nimport Constants from \"values\";\nimport {\n  getProperties,\n  calculateBestOption,\n  getTask3Diagram,\n  getTask3DiagramByOption,\n  getTask3DiagramNames,\n  getTask3DiagramExactOption,\n  getTask3DiagramLog,\n} from \"api\";\n\nfunction Form({\n  minHeight,\n  frameResults,\n  log,\n  onFirstDiagramSelect,\n  onSecondDiagramSelect,\n  onThirdDiagramSelect,\n  setIsLoading,\n}: IForm3) {\n  const [scope, setScope] = useState<number>();\n  const [checkboxes, setCheckboxes] = useState<ICheckbox[]>([]);\n  const [checkboxesValues, setCheckboxesValues] = useState<any>({});\n\n  const handleCheckbox = async (event: any) => {\n    const newValues = {\n      ...checkboxesValues,\n      [event.target.value]: event.target.checked,\n    };\n\n    setCheckboxesValues(newValues);\n\n    const keys = [];\n\n    for (let key in newValues) {\n      if (newValues[key]) keys.push(+key);\n    }\n\n    if (!scope) return;\n\n    setIsLoading(true);\n    const newBestOption = await calculateBestOption(scope, keys);\n\n    const type = newBestOption?.id;\n    if (!type) return onSecondDiagramSelect(null, []);\n\n    const secondDiagram = getTask3DiagramByOption(scope, keys);\n    const newFrameResults = await getTask3DiagramNames(scope, keys);\n\n    onSecondDiagramSelect(secondDiagram, newFrameResults);\n\n    setIsLoading(false);\n  };\n\n  const handleScope = async (event: any) => {\n    const { value } = event.target;\n\n    setIsLoading(true);\n\n    const firstDiagram = getTask3Diagram(value);\n    onFirstDiagramSelect(firstDiagram);\n\n    const _checkboxes = await getProperties(value);\n\n    setCheckboxesValues({});\n    setScope(value);\n    setCheckboxes(_checkboxes);\n    setIsLoading(false);\n  };\n\n  const handleRadio = async (event: any) => {\n    const { value } = event.target;\n\n    if (!scope) return;\n\n    setIsLoading(true);\n    const log = await getTask3DiagramLog(scope, value);\n    setIsLoading(false);\n\n    onThirdDiagramSelect(getTask3DiagramExactOption(scope, value), log);\n  };\n\n  return (\n    <>\n      <FormControl\n        component=\"fieldset\"\n        variant=\"standard\"\n        style={{\n          width: \"80%\",\n          ...(minHeight && { minHeight }),\n        }}\n      >\n        <FormGroup>\n          <InputLabel id=\"scope-label\">{Constants.LABELS.scope}</InputLabel>\n          <ScopeSelect onChange={handleScope} />\n          <Checkboxes\n            checkboxes={checkboxes}\n            state={checkboxesValues}\n            onChange={handleCheckbox}\n          />\n          {frameResults.length > 0 && (\n            <FrameResultsSelect results={frameResults} onChange={handleRadio} />\n          )}\n          {log.length > 0 && <Log value={log}/>}\n        </FormGroup>\n      </FormControl>\n    </>\n  );\n}\n\nexport default Form;\n","import { useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\n\nimport PageHalf from \"app/components/PageHalf\";\nimport Form from \"./components/Form\";\nimport Constants from \"values\";\nimport DiagramLayers from \"app/components/DiagramLayers\";\nimport IFrameResult from \"types/IFrameResult\";\nimport IDiagram from \"types/IDiagram\";\nimport ILab from \"types/ILab\";\nimport Log from \"./components/Log\";\n\nfunction Lab3({ isLoading, setIsLoading, windowHeight }: ILab) {\n  const [firstDiagram, setFirstDiagram] = useState<IDiagram | null>();\n  const [secondDiagram, setSecondDiagram] = useState<IDiagram | null>();\n  const [thirdDiagram, setThirdDiagram] = useState<IDiagram | null>();\n\n  const [frameResults, setFrameResults] = useState<IFrameResult[]>([]);\n\n  const [log, setLog] = useState<string>(\"\");\n\n  const diagram = thirdDiagram || secondDiagram || firstDiagram;\n  const diagrams = diagram ? [diagram] : [];\n\n  useEffect(() => {\n    document.title = Constants.LABELS.frameModel;\n  }, []);\n\n  const minHeight = \"90%\";\n\n  const onFirstDiagramSelect = (diagram: IDiagram | null) => {\n    setLog(\"\");\n    setThirdDiagram(null);\n    setSecondDiagram(null);\n    setFirstDiagram(diagram);\n    setFrameResults([]);\n  }\n\n  const onSecondDiagramSelect = (diagram: IDiagram | null, frameResults: IFrameResult[]) => {\n    setLog(\"\");\n    setThirdDiagram(null);\n    setSecondDiagram(diagram);\n    setFrameResults(frameResults);\n  }\n\n  const onThirdDiagramSelect = (diagram: IDiagram | null, log: string) => {\n    setThirdDiagram(diagram);\n    setLog(log);\n  }\n\n  return (\n    <Grid container spacing={2}>\n      <PageHalf windowHeight={windowHeight} xs={4}>\n        <Form\n          log={log}\n          minHeight={minHeight}\n          isLoading={isLoading}\n          setIsLoading={setIsLoading}\n          onFirstDiagramSelect={onFirstDiagramSelect}\n          onSecondDiagramSelect={onSecondDiagramSelect}\n          onThirdDiagramSelect={onThirdDiagramSelect}\n          frameResults={frameResults}\n        />\n      </PageHalf>\n      <PageHalf windowHeight={windowHeight} xs={8}>\n        <DiagramLayers diagrams={diagrams} height={90}/>\n      </PageHalf>\n    </Grid>\n  );\n}\n\nexport default Lab3;\n","import { useState, useEffect } from \"react\";\nimport { Routes, Route, useLocation, useNavigate } from \"react-router-dom\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport Box from \"@mui/material/Box\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\n\nimport Lab1 from \"./Lab1\";\nimport Lab2 from \"./Lab2\";\nimport Lab3 from \"./Lab3\";\nimport Constants from \"values\";\n\nfunction App() {\n  const route = useLocation();\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [windowHeight, setWindowHeight] = useState<number>(window.innerHeight);\n\n  useEffect(() => {\n    const updateWindowHeight = (): void => {\n      setWindowHeight(window.innerHeight);\n    };\n\n    window.addEventListener(\"resize\", updateWindowHeight);\n    return () => window.removeEventListener(\"resize\", updateWindowHeight);\n  }, []);\n\n  const selectTab = (_: any, value: string) => navigate(value);\n\n  const labsProps = {\n    isLoading,\n    setIsLoading,\n    windowHeight,\n  };\n\n  return (\n    <>\n      <LinearProgress\n        style={{\n          opacity: isLoading ? 100 : 0,\n        }}\n      />\n      <Box sx={{ width: \"100%\" }}>\n        <Tabs value={route.pathname} onChange={selectTab} centered>\n          <Tab label={Constants.LABELS.productionModel} value=\"/\" />\n          <Tab label={Constants.LABELS.semanticWeb} value=\"/2\" />\n          <Tab label={Constants.LABELS.frameModel} value=\"/3\" />\n        </Tabs>\n      </Box>\n      <Routes>\n        <Route path={\"/\"} element={<Lab1 {...labsProps} />} />\n        <Route path=\"/2\" element={<Lab2 {...labsProps} />} />\n        <Route path=\"/3\" element={<Lab3 {...labsProps} />} />\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nimport App from \"app/App\";\nimport 'index.css'\n\nconst theme = createTheme({\n  palette: {\n    mode: \"dark\"\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}