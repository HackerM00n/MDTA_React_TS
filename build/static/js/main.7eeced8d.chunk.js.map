{"version":3,"sources":["pages/Lab1/components/PagePart.tsx","api/index.tsx","values/index.tsx","pages/Lab1/components/Form.tsx","pages/Lab1/components/BestOption.tsx","pages/Lab1/index.tsx","pages/Lab2/index.tsx","pages/Lab3/index.tsx","pages/Lab4/index.tsx","App.tsx","index.tsx"],"names":["PagePart","children","xs","windowHeight","Grid","item","container","direction","alignItems","justifyContent","style","height","API_DOMAIN","getProperties","type","a","fetch","response","status","json","map","id","description","alert","console","log","calculateBestOption","keys","key","join","length","name","constants","SCOPE_NAMES","LABELS","count","scope","notFound","bestOption","productionModel","semanticWeb","Form","isLoading","minHeight","onSubmit","onSwitch","setIsLoading","useState","setType","props","setProps","state","setState","handleCheckbox","event","target","value","checked","handleSelect","_props","FormControl","component","variant","width","FormGroup","InputLabel","Constants","Select","labelId","label","onChange","MenuItem","FormControlLabel","control","Switch","Button","onClick","push","BestOption","Paper","Stack","fontSize","textAlign","Lab1","setBestOption","window","innerHeight","setWindowHeight","useEffect","document","title","updateWindowHeight","addEventListener","removeEventListener","onCaclulate","spacing","Lab2","Lab3","Lab4","App","route","useLocation","navigate","useNavigate","LinearProgress","opacity","Box","sx","Tabs","pathname","_","centered","Tab","path","element","theme","createTheme","palette","mode","ReactDOM","render","StrictMode","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.7eeced8d.chunk.js","sourcesContent":["import Grid from \"@mui/material/Grid\";\nimport IPagePart from \"types/IPagePart\";\n\nfunction PagePart({ children, xs = 6, windowHeight }: IPagePart) {\n  return (\n    <Grid item xs={xs}>\n      <Grid\n        container\n        direction=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        style={{ height: windowHeight - 100 }}\n      >\n        {children}\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default PagePart;\n","const API_DOMAIN = \"https://localhost:5001/api/v1\";\n\nexport const getProperties = async (type: number) => {\n  try {\n    const response = await fetch(`${API_DOMAIN}/variant${type}/getProperties`);\n\n    if (response.status !== 200) return [];\n\n    return (await response.json()).map(\n      ({ id, description }: any) => ({\n        id,\n        description,\n      })\n    );\n  } catch (error) {\n    alert(\"API is not available\");\n    console.log(error);\n    return [];\n  }\n};\n\nexport const calculateBestOption = async (type: number, keys: number[]) => {\n  try {\n    const response = await fetch(\n      `${API_DOMAIN}/variant${type}/calculateBestOptions?${keys\n        .map((key) => `properties=${key}`)\n        .join(\"&\")}`\n    );\n\n    if (response.status !== 200) return [];\n\n    const json = await response.json();\n\n    return json.length ? json[0].name : \"\";\n  } catch (error) {\n    alert(\"API is not available\");\n    console.log(error);\n    return \"\";\n  }\n};\n","const SCOPE_NAMES = {\n  8: \"Військова справа\",\n  9: \"Автосервіс\",\n  20: \"Морський транспорт\",\n};\n\nconst LABELS = {\n  count: \"Розрахувати\",\n  scope: \"Предметна галузь\",\n  notFound: \"Не знайдено\",\n  bestOption: \"Оптимальний варіант\",\n  productionModel: \"Продукційна модель\",\n  semanticWeb: \"Cемантична мережа\",\n};\n\nconst constants = {\n  SCOPE_NAMES,\n  LABELS,\n};\n\nexport default constants;\n","import { useState } from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Button from \"@mui/material/Button\";\nimport Select from \"@mui/material/Select\";\n\nimport { getProperties } from \"api\";\nimport IProperty from \"types/IProperty\";\nimport IForm from \"types/IForm\";\nimport Constants from \"values\";\n\nfunction Form({\n  isLoading,\n  minHeight,\n  onSubmit,\n  onSwitch,\n  setIsLoading,\n}: IForm) {\n  const [type, setType] = useState<number>();\n  const [props, setProps] = useState<IProperty[]>([]);\n  const [state, setState] = useState<any>({});\n\n  const handleCheckbox = (event: any) => {\n    setState({\n      ...state,\n      [event.target.value]: event.target.checked,\n    });\n  };\n\n  const handleSelect = async (event: any) => {\n    const { value } = event.target;\n\n    setIsLoading(true);\n\n    const _props = await getProperties(value);\n\n    setState({});\n    setType(value);\n    setProps(_props);\n    setIsLoading(false);\n    onSwitch();\n  };\n\n  const onCaclucate = () => {\n    const keys = [];\n\n    for (let key in state) {\n      if (state[key]) keys.push(key);\n    }\n\n    if (keys.length && type && onSubmit) onSubmit(type, keys);\n  };\n\n  return (\n    <>\n      <FormControl\n        component=\"fieldset\"\n        variant=\"standard\"\n        style={{\n          width: \"80%\",\n          ...(minHeight && { minHeight }),\n        }}\n      >\n        <FormGroup>\n          <InputLabel id=\"scope-label\">{Constants.LABELS.scope}</InputLabel>\n          <Select\n            labelId=\"scope-label\"\n            id=\"scope\"\n            label={Constants.LABELS.scope}\n            onChange={handleSelect}\n          >\n            <MenuItem value={9}>{Constants.SCOPE_NAMES[9]}</MenuItem>\n            <MenuItem value={8}>{Constants.SCOPE_NAMES[8]}</MenuItem>\n            <MenuItem value={20}>{Constants.SCOPE_NAMES[20]}</MenuItem>\n          </Select>\n          {props.map(({id, description}) => (\n            <FormControlLabel\n              control={<Switch onChange={handleCheckbox} value={id} checked={!!state[id]}/>}\n              label={description}\n              key={id}\n            />\n          ))}\n          {!!props.length && !isLoading && (\n            <Button onClick={onCaclucate} variant=\"contained\">\n              {Constants.LABELS.count}\n            </Button>\n          )}\n        </FormGroup>\n      </FormControl>\n    </>\n  );\n}\n\nexport default Form;\n","import Paper from \"@mui/material/Paper\";\nimport Stack from \"@mui/material/Stack\";\n\nimport Constants from \"values\";\nimport IBestOption from \"types/IBestOption\";\n\nconst BestOption = ({ bestOption, minHeight }: IBestOption) => {\n  return (\n    <Paper\n      component={Stack}\n      variant=\"outlined\"\n      direction=\"column\"\n      justifyContent=\"center\"\n      style={{\n        fontSize: 30,\n        width: \"80%\",\n        textAlign: \"center\",\n        ...(minHeight && { minHeight }),\n      }}\n    >\n      <div>{bestOption ? Constants.LABELS.bestOption + \":\" : \"⬅\"}</div>\n      <div>{bestOption}</div>\n    </Paper>\n  );\n};\n\nexport default BestOption;\n","import { useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\n\nimport PagePart from \"./components/PagePart\";\nimport Form from \"./components/Form\";\nimport BestOption from \"./components/BestOption\";\nimport Constants from \"values\";\nimport { calculateBestOption } from \"api\";\n\nfunction Lab1({\n  isLoading,\n  setIsLoading,\n}: {\n  isLoading: boolean;\n  setIsLoading: (value: boolean) => any;\n}) {\n  const [bestOption, setBestOption] = useState<string>(\"\");\n  const [windowHeight, setWindowHeight] = useState<number>(window.innerHeight);\n\n  useEffect(() => {\n    document.title = Constants.LABELS.productionModel;\n\n    const updateWindowHeight = (): void => {\n      setWindowHeight(window.innerHeight);\n    };\n\n    window.addEventListener(\"resize\", updateWindowHeight);\n    return () => window.removeEventListener(\"resize\", updateWindowHeight);\n  }, []);\n\n  const onCaclulate = async (type: number, keys: number[]) => {\n    setIsLoading(true);\n\n    const bestOption = await calculateBestOption(type, keys);\n\n    setBestOption(bestOption || Constants.LABELS.notFound);\n\n    setIsLoading(false);\n  };\n\n  const onFormSwitch = () => setBestOption(\"\");\n\n  const minHeight = \"50%\";\n\n  return (\n    <>\n      <Grid container spacing={2}>\n        <PagePart windowHeight={windowHeight}>\n          <Form\n            onSubmit={onCaclulate}\n            onSwitch={onFormSwitch}\n            isLoading={isLoading}\n            setIsLoading={setIsLoading}\n            minHeight={minHeight}\n          />\n        </PagePart>\n        <PagePart windowHeight={windowHeight}>\n          <BestOption bestOption={bestOption} minHeight={minHeight} />\n        </PagePart>\n      </Grid>\n    </>\n  );\n}\n\nexport default Lab1;\n","import React, { useEffect } from \"react\";\n\nimport Constants from \"values\";\n\nfunction Lab2() {\n  useEffect(() => {\n    document.title = Constants.LABELS.semanticWeb;\n  }, []);\n\n  return <></>;\n}\n\nexport default Lab2;\n","import React, { useEffect } from \"react\";\n\nfunction Lab3() {  \n  useEffect(() => {\n    document.title = \"Lab 3\"\n  }, []);\n\n  return (\n    <></>\n  );\n}\n\nexport default Lab3;\n","import React, { useEffect } from \"react\";\n\nfunction Lab4() {  \n  useEffect(() => {\n    document.title = \"Lab 4\"\n  }, []);\n\n  return (\n    <></>\n  );\n}\n\nexport default Lab4;\n","import { useState } from \"react\";\nimport { Routes, Route, useLocation, useNavigate } from \"react-router-dom\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport Box from \"@mui/material/Box\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\n\nimport Lab1 from \"pages/Lab1\";\nimport Lab2 from \"pages/Lab2\";\nimport Lab3 from \"pages/Lab3\";\nimport Lab4 from \"pages/Lab4\";\nimport Constants from \"values\";\n\nfunction App() {\n  const route = useLocation();\n\n  const navigate = useNavigate();\n\n  const selectTab = (_: any, value: string) => navigate(value);\n\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  return (\n    <>\n      <LinearProgress\n        style={{\n          opacity: isLoading ? 100 : 0,\n        }}\n      />\n      <Box sx={{ width: \"100%\" }}>\n        <Tabs value={route.pathname} onChange={selectTab} centered>\n          <Tab label={Constants.LABELS.productionModel} value=\"/\" />\n          <Tab label={Constants.LABELS.semanticWeb} value=\"/2\" />\n          {/* <Tab label=\"Lab 3\" value=\"/3\" />\n          <Tab label=\"Lab 4\" value=\"/4\" /> */}\n        </Tabs>\n      </Box>\n      <Routes>\n        <Route\n          path={\"/\"}\n          element={<Lab1 isLoading={isLoading} setIsLoading={setIsLoading} />}\n        />\n        <Route path=\"/2\" element={<Lab2 />} />\n        <Route path=\"/3\" element={<Lab3 />} />\n        <Route path=\"/4\" element={<Lab4 />} />\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nimport App from \"./App\";\nimport './index.css'\n\nconst theme = createTheme({\n  palette: {\n    mode: \"dark\"\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}