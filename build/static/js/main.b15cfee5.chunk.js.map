{"version":3,"sources":["app/components/PageHalf.tsx","values/index.tsx","app/components/ScopeSelect.tsx","app/components/Checkboxes.tsx","api/index.tsx","app/Lab1/components/Form.tsx","app/Lab1/components/BestOption.tsx","app/Lab1/index.tsx","app/Lab2/components/Form.tsx","app/Lab2/components/DiagramLayers.tsx","app/Lab2/index.tsx","app/App.tsx","index.tsx"],"names":["PageHalf","children","xs","windowHeight","Grid","item","container","direction","alignItems","justifyContent","style","height","constants","SCOPE_NAMES","LABELS","count","scope","notFound","bestOption","productionModel","semanticWeb","ScopeSelect","onChange","InputLabel","id","Constants","Select","labelId","label","MenuItem","value","Checkboxes","checkboxes","state","map","description","FormControlLabel","control","Switch","checked","API_DOMAIN","getProperties","a","fetch","response","status","json","alert","console","log","getTypes","calculateBestOption","type","keys","key","join","length","name","getDiagramImage","imageUrl","Form","isLoading","minHeight","onSubmit","setIsLoading","useState","setType","setCheckboxes","checkboxesValues","setCheckboxesValues","handleScope","event","target","_checkboxes","FormControl","component","variant","width","FormGroup","Button","onClick","push","BestOption","Paper","Stack","fontSize","textAlign","Lab1","setBestOption","useEffect","document","title","onCaclulate","spacing","onScopeChange","onCheck","setScope","checkAll","_checkboxesValues","forEach","_","isChecked","DiagramLayers","diagrams","position","background","borderRadius","border","overflow","diagram","alt","toString","src","maxHeight","maxWidth","left","top","transform","pointerEvents","Lab2","setDiagrams","filter","types","App","route","useLocation","navigate","useNavigate","window","innerHeight","setWindowHeight","updateWindowHeight","addEventListener","removeEventListener","labsProps","LinearProgress","opacity","Box","sx","Tabs","pathname","centered","Tab","path","element","theme","createTheme","palette","mode","ReactDOM","render","StrictMode","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.b15cfee5.chunk.js","sourcesContent":["import Grid from \"@mui/material/Grid\";\n\nimport IPageHalf from \"types/IPageHalf\";\n\nfunction PageHalf({ children, xs = 6, windowHeight }: IPageHalf) {\n  return (\n    <Grid item xs={xs}>\n      <Grid\n        container\n        direction=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        style={{ height: windowHeight - 100 }}\n      >\n        {children}\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default PageHalf;\n","const SCOPE_NAMES = {\n  8: \"Військова справа\",\n  9: \"Автосервіс\",\n  20: \"Морський транспорт\",\n};\n\nconst LABELS = {\n  count: \"Розрахувати\",\n  scope: \"Предметна галузь\",\n  notFound: \"Не знайдено\",\n  bestOption: \"Оптимальний варіант\",\n  productionModel: \"Продукційна модель\",\n  semanticWeb: \"Cемантична мережа\",\n};\n\nconst constants = {\n  SCOPE_NAMES,\n  LABELS,\n};\n\nexport default constants;\n","import MenuItem from \"@mui/material/MenuItem\";\nimport Select from \"@mui/material/Select\";\nimport InputLabel from \"@mui/material/InputLabel\";\n\nimport IScopeSelect from \"types/IScopeSelect\";\nimport Constants from \"values\";\n\nfunction ScopeSelect({ onChange }: IScopeSelect) {\n  return (\n    <>\n      <InputLabel id=\"scope-label\">{Constants.LABELS.scope}</InputLabel>\n      <Select\n        labelId=\"scope-label\"\n        id=\"scope\"\n        label={Constants.LABELS.scope}\n        onChange={onChange}\n      >\n        <MenuItem value={9}>{Constants.SCOPE_NAMES[9]}</MenuItem>\n        <MenuItem value={8}>{Constants.SCOPE_NAMES[8]}</MenuItem>\n        <MenuItem value={20}>{Constants.SCOPE_NAMES[20]}</MenuItem>\n      </Select>\n    </>\n  );\n}\n\nexport default ScopeSelect;\n","import FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Switch from \"@mui/material/Switch\";\n\nimport ICheckboxes from \"types/ICheckboxes\";\n\nfunction Checkboxes({ checkboxes, state, onChange }: ICheckboxes) {\n  return (\n    <>\n      {checkboxes.map(({ id, description }) => (\n        <FormControlLabel\n          control={\n            <Switch\n              onChange={onChange}\n              value={id}\n              {...(state && { checked: !!state[id] })}\n            />\n          }\n          label={description}\n          key={id}\n        />\n      ))}\n    </>\n  );\n}\n\nexport default Checkboxes;\n","import IDiagram from \"types/IDiagram\";\nimport ICheckbox from \"types/ICheckbox\";\n\nconst API_DOMAIN = \"https://localhost:5001/api/v1\";\n\nexport const getProperties = async (scope: number): Promise<ICheckbox[]> => {\n  try {\n    const response = await fetch(`${API_DOMAIN}/variant${scope}/getProperties`);\n\n    if (response.status !== 200) return [];\n\n    return (await response.json()).map(({ id, description }: any) => ({\n      id,\n      description,\n    }));\n  } catch (error) {\n    alert(\"API is not available\");\n    console.log(error);\n    return [];\n  }\n};\n\nexport const getTypes = async (scope: number): Promise<ICheckbox[]> => {\n  try {\n    const response = await fetch(`${API_DOMAIN}/variant${scope}/getTypes`);\n\n    if (response.status !== 200) return [];\n\n    return (await response.json()).map(({ id, description }: any) => ({\n      id,\n      description,\n    }));\n  } catch (error) {\n    alert(\"API is not available\");\n    console.log(error);\n    return [];\n  }\n};\n\nexport const calculateBestOption = async (\n  type: number,\n  keys: number[]\n): Promise<string> => {\n  try {\n    const response = await fetch(\n      `${API_DOMAIN}/variant${type}/calculateBestOptions?${keys\n        .map((key) => `properties=${key}`)\n        .join(\"&\")}`\n    );\n\n    if (response.status !== 200) return \"\";\n\n    const json = await response.json();\n\n    return json.length ? json[0].name : \"\";\n  } catch (error) {\n    alert(\"API is not available\");\n    console.log(error);\n    return \"\";\n  }\n};\n\nexport const getDiagramImage = (scope: number, type: number): IDiagram => ({\n  type,\n  imageUrl: `${API_DOMAIN}/variant${scope}/getDiagram?type=${type}`,\n});\n","import { useState } from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport Button from \"@mui/material/Button\";\n\nimport ScopeSelect from \"app/components/ScopeSelect\";\nimport Checkboxes from \"app/components/Checkboxes\";\nimport ICheckbox from \"types/ICheckbox\";\nimport IForm from \"types/IForm\";\nimport Constants from \"values\";\nimport { getProperties } from \"api\";\n\nfunction Form({\n  isLoading,\n  minHeight,\n  onSubmit,\n  setIsLoading,\n}: IForm) {\n  const [type, setType] = useState<number>();\n  const [checkboxes, setCheckboxes] = useState<ICheckbox[]>([]);\n  const [checkboxesValues, setCheckboxesValues] = useState<any>({});\n\n  const handleCheckbox = (event: any) =>\n    setCheckboxesValues({\n      ...checkboxesValues,\n      [event.target.value]: event.target.checked,\n    });\n\n  const handleScope = async (event: any) => {\n    const { value } = event.target;\n\n    setIsLoading(true);\n\n    const _checkboxes = await getProperties(value);\n\n    setCheckboxesValues({});\n    setType(value);\n    setCheckboxes(_checkboxes);\n    setIsLoading(false);\n  };\n\n  const onCaclucate = () => {\n    const keys = [];\n\n    for (let key in checkboxesValues) {\n      if (checkboxesValues[key]) keys.push(key);\n    }\n\n    if (keys.length && type && onSubmit) onSubmit(type, keys);\n  };\n\n  return (\n    <>\n      <FormControl\n        component=\"fieldset\"\n        variant=\"standard\"\n        style={{\n          width: \"80%\",\n          ...(minHeight && { minHeight }),\n        }}\n      >\n        <FormGroup>\n          <InputLabel id=\"scope-label\">{Constants.LABELS.scope}</InputLabel>\n          <ScopeSelect onChange={handleScope} />\n          <Checkboxes\n            checkboxes={checkboxes}\n            state={checkboxesValues}\n            onChange={handleCheckbox}\n          />\n          {!!checkboxes.length && !isLoading && (\n            <Button onClick={onCaclucate} variant=\"contained\">\n              {Constants.LABELS.count}\n            </Button>\n          )}\n        </FormGroup>\n      </FormControl>\n    </>\n  );\n}\n\nexport default Form;\n","import Paper from \"@mui/material/Paper\";\nimport Stack from \"@mui/material/Stack\";\n\nimport IBestOption from \"types/IBestOption\";\nimport Constants from \"values\";\n\nconst BestOption = ({ bestOption, minHeight }: IBestOption) => {\n  return (\n    <Paper\n      component={Stack}\n      variant=\"outlined\"\n      direction=\"column\"\n      justifyContent=\"center\"\n      style={{\n        fontSize: 30,\n        width: \"80%\",\n        textAlign: \"center\",\n        ...(minHeight && { minHeight }),\n      }}\n    >\n      <div>{bestOption ? Constants.LABELS.bestOption + \":\" : \"⬅\"}</div>\n      <div>{bestOption}</div>\n    </Paper>\n  );\n};\n\nexport default BestOption;\n","import { useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\n\nimport PageHalf from \"../components/PageHalf\";\nimport Form from \"./components/Form\";\nimport BestOption from \"./components/BestOption\";\nimport ILab from \"types/ILab\";\nimport Constants from \"values\";\nimport { calculateBestOption } from \"api\";\n\nfunction Lab1({ isLoading, setIsLoading, windowHeight }: ILab) {\n  const [bestOption, setBestOption] = useState<string>(\"\");\n\n  useEffect(() => {\n    document.title = Constants.LABELS.productionModel;\n  }, []);\n\n  const onCaclulate = async (type: number, keys: number[]) => {\n    setIsLoading(true);\n\n    const bestOption = await calculateBestOption(type, keys);\n\n    setBestOption(bestOption || Constants.LABELS.notFound);\n\n    setIsLoading(false);\n  };\n\n  const onFormSwitch = () => setBestOption(\"\");\n\n  const minHeight = \"50%\";\n\n  return (\n    <>\n      <Grid container spacing={2}>\n        <PageHalf windowHeight={windowHeight}>\n          <Form\n            onSubmit={onCaclulate}\n            onScopeChange={onFormSwitch}\n            isLoading={isLoading}\n            setIsLoading={setIsLoading}\n            minHeight={minHeight}\n          />\n        </PageHalf>\n        <PageHalf windowHeight={windowHeight}>\n          <BestOption bestOption={bestOption} minHeight={minHeight} />\n        </PageHalf>\n      </Grid>\n    </>\n  );\n}\n\nexport default Lab1;\n","import { useState } from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport InputLabel from \"@mui/material/InputLabel\";\n\nimport ScopeSelect from \"app/components/ScopeSelect\";\nimport Checkboxes from \"app/components/Checkboxes\";\nimport ICheckbox from \"types/ICheckbox\";\nimport IForm from \"types/IForm\";\nimport Constants from \"values\";\nimport { getTypes } from \"api\";\n\nfunction Form({ minHeight, setIsLoading, onScopeChange, onCheck }: IForm) {\n  const [scope, setScope] = useState<number>();\n  const [checkboxes, setCheckboxes] = useState<ICheckbox[]>([]);\n  const [checkboxesValues, setCheckboxesValues] = useState<any>({});\n\n  const handleCheckbox = (event: any) => {\n    setCheckboxesValues({\n      ...checkboxesValues,\n      [event.target.value]: event.target.checked,\n    });\n\n    if (onCheck)\n      onCheck({\n        scope,\n        type: +event.target.value,\n        isChecked: event.target.checked,\n      });\n  };\n\n  const checkAll = (scope: number, checkboxes: ICheckbox[]) => {\n    const _checkboxesValues: any = {};\n\n    checkboxes.forEach((type) => {\n      _checkboxesValues[type.id] = true;\n    });\n\n    setCheckboxesValues(_checkboxesValues);\n  };\n\n  const handleScope = async (event: any) => {\n    const { value } = event.target;\n\n    setIsLoading(true);\n\n    const _checkboxes = await getTypes(value);\n\n    checkAll(value, _checkboxes);\n    setCheckboxes(_checkboxes);\n    setScope(value);\n    setIsLoading(false);\n\n    if (onScopeChange)\n      onScopeChange(\n        value,\n        _checkboxes.map((_) => _.id)\n      );\n  };\n\n  return (\n    <>\n      <FormControl\n        component=\"fieldset\"\n        variant=\"standard\"\n        style={{\n          width: \"80%\",\n          ...(minHeight && { minHeight }),\n        }}\n      >\n        <FormGroup>\n          <InputLabel id=\"scope-label\">{Constants.LABELS.scope}</InputLabel>\n          <ScopeSelect onChange={handleScope} />\n          <Checkboxes\n            checkboxes={checkboxes}\n            state={checkboxesValues}\n            onChange={handleCheckbox}\n          />\n        </FormGroup>\n      </FormControl>\n    </>\n  );\n}\n\nexport default Form;\n","import IDiagramLayers from \"types/IDiagramLayers\";\n\nfunction DiagramLayers({ diagrams }: IDiagramLayers) {\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        width: \"90%\",\n        height: \"70%\",\n        background: \"white\",\n        borderRadius: \"50px\",\n        border: \"solid #bababa 2px\",\n        overflow: \"hidden\",\n      }}\n    >\n      {diagrams.map((diagram) => (\n        <img\n          alt={diagram.type.toString()}\n          key={diagram.type}\n          src={diagram.imageUrl}\n          style={{\n            position: \"absolute\",\n            maxHeight: \"115%\",\n            maxWidth: \"115%\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            pointerEvents: \"none\"\n          }}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default DiagramLayers;\n","import { useEffect, useState } from \"react\";\nimport Grid from \"@mui/material/Grid\";\n\nimport PageHalf from \"app/components/PageHalf\";\nimport Form from \"./components/Form\";\nimport DiagramLayers from \"./components/DiagramLayers\";\nimport IDiagram from \"types/IDiagram\";\nimport ILab from \"types/ILab\";\nimport Constants from \"values\";\nimport { getDiagramImage } from \"api\";\n\nfunction Lab2({ isLoading, setIsLoading, windowHeight }: ILab) {\n  const [diagrams, setDiagrams] = useState<IDiagram[]>([]);\n\n  useEffect(() => {\n    document.title = Constants.LABELS.semanticWeb;\n  }, []);\n\n  const minHeight = \"50%\";\n\n  const onScopeChange = (scope: number, types: number[]) => {\n    setDiagrams(types.map((type) => getDiagramImage(scope, type)));\n  };\n\n  const onCheck = ({\n    scope,\n    type,\n    isChecked,\n  }: {\n    scope: number;\n    type: number;\n    isChecked: boolean;\n  }) => {\n    setDiagrams(\n      isChecked\n        ? [getDiagramImage(scope, type), ...diagrams]\n        : diagrams.filter((diagram) => diagram.type !== type)\n    );\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <PageHalf windowHeight={windowHeight} xs={4}>\n        <Form\n          minHeight={minHeight}\n          isLoading={isLoading}\n          setIsLoading={setIsLoading}\n          onCheck={onCheck}\n          onScopeChange={onScopeChange}\n        />\n      </PageHalf>\n      <PageHalf windowHeight={windowHeight} xs={8}>\n        <DiagramLayers diagrams={diagrams} />\n      </PageHalf>\n    </Grid>\n  );\n}\n\nexport default Lab2;\n","import { useState, useEffect } from \"react\";\nimport { Routes, Route, useLocation, useNavigate } from \"react-router-dom\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport Box from \"@mui/material/Box\";\nimport Tabs from \"@mui/material/Tabs\";\nimport Tab from \"@mui/material/Tab\";\n\nimport Lab1 from \"./Lab1\";\nimport Lab2 from \"./Lab2\";\n// import Lab3 from \"pages/Lab3\";\n// import Lab4 from \"pages/Lab4\";\nimport Constants from \"values\";\n\nfunction App() {\n  const route = useLocation();\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [windowHeight, setWindowHeight] = useState<number>(window.innerHeight);\n\n  useEffect(() => {\n    const updateWindowHeight = (): void => {\n      setWindowHeight(window.innerHeight);\n    };\n\n    window.addEventListener(\"resize\", updateWindowHeight);\n    return () => window.removeEventListener(\"resize\", updateWindowHeight);\n  }, []);\n\n  const selectTab = (_: any, value: string) => navigate(value);\n\n  const labsProps = {\n    isLoading,\n    setIsLoading,\n    windowHeight,\n  };\n\n  return (\n    <>\n      <LinearProgress\n        style={{\n          opacity: isLoading ? 100 : 0,\n        }}\n      />\n      <Box sx={{ width: \"100%\" }}>\n        <Tabs value={route.pathname} onChange={selectTab} centered>\n          <Tab label={Constants.LABELS.productionModel} value=\"/\" />\n          <Tab label={Constants.LABELS.semanticWeb} value=\"/2\" />\n          {/* <Tab label=\"Lab 3\" value=\"/3\" />\n          <Tab label=\"Lab 4\" value=\"/4\" /> */}\n        </Tabs>\n      </Box>\n      <Routes>\n        <Route path={\"/\"} element={<Lab1 {...labsProps} />} />\n        <Route path=\"/2\" element={<Lab2 {...labsProps} />} />\n        {/* <Route path=\"/3\" element={<Lab3 {...labsProps} />} />\n        <Route path=\"/4\" element={<Lab4 {...labsProps} />} /> */}\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\n\nimport App from \"app/App\";\nimport 'index.css'\n\nconst theme = createTheme({\n  palette: {\n    mode: \"dark\"\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}